#!/bin/bash

# 
# eject - 
# 
# v0.1   2007-05-21 - Morgan Aldridge <morgant@makkintosshu.com>
#                     Initial version.
# v0.2   2010-10-24 - Morgan Aldridge
#                     Minor cleanup. Automatically prepend /Volumes/ to volume name if omitted.
# v0.3   2010-12-07 - Morgan Aldridge
#                     Added "-f" option to force a disk to eject. Now supports ejecting of
#                     network volumes.
# 

# TO DO:
# - Verbose doesn't currently do anything.

# global variables
force=false
verbose=false
help=false

# print usage instructions (help)
function usage() {
	printf "Usage: eject [options] volume ...\n"
	printf "  -f            force volume to be ejected, even if files/directories are open\n"
	printf "  -v		verbose output\n"
	printf "  -h		print these usage instructions\n"
}

# see if any arguments were passed in
if [ $# -gt 0 ]; then
	# if so, step through them all and process them
	while [ $# -gt 0 ]; do
		# see if the user intended us to run in verbose mode
                if [ "$1" = "-v" ]; then
                        shift
                        verbose=true
		# see if the user intended us to force the action
		elif [ "$1" = "-f" ]; then
			shift
			force=true
                # see if the user requested help
                elif [ "$1" = "-h" ]; then
                        shift
                        help=true
                        usage
		else
                        # don't bother doing anything if the user requested help
                        if ! $help; then
				if $force; then f="force"; fi
				# try to detect whether the user prepended "/Volumes/" to the volume name
				if [ "${1:0:9}" = "/Volumes/" ]; then
					vol="$1"
				else
					vol="/Volumes/$1"
				fi
				# determine the type of filesystem of the mount so we can unmount network volumes appropriately
				mnt_info=$(mount | grep "$vol")
				IFS=\(, read -r -d '' _ fs_type _ <<< "$mnt_info"
				if [[ ( $fs_type == "afpfs" ) || ( $fs_type == "smbfs" ) || ( $fs_type == "webdav" ) ]]; then
					diskutil unmount $f "$vol"
				else
					if $force; then
						diskutil unmountDisk $f "$vol"
					else
						diskutil eject "$vol"
					fi
				fi
                        fi
                        shift
                fi
	done
else
	printf "No volumes were specified to be ejected.\n\n"
	usage
fi
